version: 2

defaults: &defaults
  working_directory: ~/code

  docker:
    - image: circleci/android:api-29

  environment:
    JVM_OPTS: -Xmx3200m
    GRADLE_OPTS: -Xmx1536m -XX:+HeapDumpOnOutOfMemoryError -Dorg.gradle.caching=true -Dorg.gradle.configureondemand=true -Dkotlin.compiler.execution.strategy=in-process -Dkotlin.incremental=false

jobs:

  debug-build:
    <<: *defaults

    steps:
      - checkout

      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum "app/build.gradle" }}

      - run:
          name: Download configuration files
          command: sudo chmod +x ./ci_config/fetch_config.sh && ./ci_config/fetch_config.sh

      - run:
          name: Download Dependencies
          command: ./gradlew androidDependencies

      - run:
          name: Build Project
          command: ./gradlew assembleDebug --scan --rerun-tasks --exclude-task test --exclude-task lint

      - save_cache:
          paths:
            - ~/.gradle
          key: jars-{{ checksum "build.gradle" }}-{{ checksum "app/build.gradle" }}

      - store_artifacts:
          path: app/build/reports
          destination: reports

  unit-tests:
    <<: *defaults

    steps:
      - checkout

      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum "app/build.gradle" }}

      - run:
          name: Download configuration files
          command: sudo chmod +x ./ci_config/fetch_config.sh && ./ci_config/fetch_config.sh

      - run:
          name: Run Unit Tests
          command: ./gradlew testDebugUnitTestCoverage

      - run:
          name: Upload code coverage report
          command: bash <(curl -s https://codecov.io/bash) -f "*.xml"

      - store_test_results:
          path: app/test/test-results

  lint:
    <<: *defaults

    steps:
      - checkout

      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum "app/build.gradle" }}

      - run:
          name: Download configuration files
          command: sudo chmod +x ./ci_config/fetch_config.sh && ./ci_config/fetch_config.sh

      - run:
          name: Run detekt
          command: ./gradlew detekt

      - run:
          name: Run Android lint
          command: ./gradlew lintDebug

      - store_artifacts:
          path: reports/
          destination: reports

      - store_artifacts:
          path: reports/detekt
          destination: reports/detekt

workflows:
  version: 2

  develop:
    jobs:
      - debug-build

      - unit-tests:
          requires:
            - debug-build

      - lint:
          requires:
            - debug-build