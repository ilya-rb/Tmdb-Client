buildscript {

    ext.dependenciesFilePath = "$rootDir/dependencies.gradle"
    ext.versionsFilePath = "$rootDir/versions.gradle"

    apply from: versionsFilePath
    apply from: dependenciesFilePath

    repositories {
        google()
        maven { url "https://plugins.gradle.org/m2/" }
        jcenter()
    }

    dependencies {
        classpath "com.android.tools.build:gradle:3.4.0-beta05"
        classpath gradlePlugins.kotlin
        classpath gradlePlugins.versions
        classpath gradlePlugins.jacoco
        classpath gradlePlugins.buildscan
        classpath gradlePlugins.firebase
        classpath gradlePlugins.androidJunit5
    }
}

plugins {
    id "io.gitlab.arturbosch.detekt" version "1.0.0-RC12"
}

allprojects {

    apply from: "$rootDir/code_quality_tools/detekt.gradle"

    repositories {
        google()
        maven { url "https://jitpack.io" }
        jcenter()
    }

    tasks.withType(JavaCompile).all {
        options.compilerArgs += [
                '-Adagger.formatGeneratedSource=disabled',
                '-Adagger.gradle.incremental=enabled'
        ]
    }

    afterEvaluate {
        extensions.findByName('kapt')?.arguments {
            arg("dagger.formatGeneratedSource", "disabled")
            arg("dagger.gradle.incremental", "enabled")
        }
    }
}

subprojects {

    apply from: "$rootDir/code_quality_tools/jacoco.gradle"

    afterEvaluate {
        // This allows us see tests execution progress in the output on the CI.
        android.testOptions.unitTests.all {
            testLogging {
                events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
                exceptionFormat 'full'
            }
        }

        android.lintOptions {
            warningsAsErrors true
            abortOnError false

            // App does not have deep linking
            disable 'GoogleAppIndexingWarning'
            // Okio references java.nio that does not presented in Android SDK
            disable 'InvalidPackage'

            checkAllWarnings true
            showAll true
            explainIssues true
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

apply plugin: 'com.gradle.build-scan'

buildScan {
    licenseAgreementUrl = 'https://gradle.com/terms-of-service'
    licenseAgree = 'yes'
}